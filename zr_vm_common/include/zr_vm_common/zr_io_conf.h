//
// Created by HeJiahui on 2025/7/6.
//

#ifndef ZR_IO_CONF_H
#define ZR_IO_CONF_H

#define ZR_IO_EOF EOF
#include "zr_vm_common/zr_common_conf.h"

static const union {
    TUInt64 dummy;
    TBool littleEndian;
} CZrIoEndian = {.dummy = 1};

#define ZR_IO_IS_LITTLE_ENDIAN (CZrIoEndian.littleEndian)

/* .SOURCE:
 *  0 SIGNATURE 4
 *  4 VERSION_MAJOR 4
 *  8 VERSION_MINOR 4
 *  12 VERSION_PATCH 4
 *  16 FORMAT 8
 *  24 NATIVE_INT_SIZE 1
 *  25 SIZE_T_SIZE 1
 *  26 INSTRUCTION_SIZE 1
 *  27 ENDIAN 1
 *  28 DEBUG 1
 *  29 OPT 3
 *  32 MODULES_LENGTH 8
 *  40 MODULES [.MODULE]
 */
#define ZR_IO_SOURCE_SIGNATURE "\x1ZR\x2"

/* .MODULE:
 * NAME [string]
 * MD5 [string]
 * IMPORTS_LENGTH [8]
 * IMPORTS [.IMPORT]
 * DECLARES_LENGTH [8]
 * DECLARES [.DECLARE]
 * ENTRY [.FUNCTION]
 */


/* .IMPORT:
 * NAME [string]
 * MD5 [string]
 *
 */

/* .META:
 * META_TYPE [4]
 * FUNCTIONS_LENGTH [8]
 * FUNCTIONS [.FUNCTION]
 */

/* .METHOD:
 * NAME [string]
 * FUNCTIONS_LENGTH [8]
 * FUNCTIONS [.FUNCTION]
 */

/* .PROPERTY
 * NAME [string]
 * PROPERTY_TYPE [4] [DECLARE|GETTER|SETTER]
 * GETTER_FUNCTION [.FUNCTION]
 * SETTER_FUNCTION [.FUNCTION]
 */

/* .FIELD
 * NAME [string]
 *
 */

/* .INSTRUCTION:
 * RAW [8]
 */

/* .LOCAL:
 * // TYPE [4]
 * // DATA [string|uint|int|float|...]
 * INSTRUCTION_START [8]
 * INSTRUCTION_END [8]
 * START_LINE [8] (DEBUG)
 * END_LINE [8] (DEBUG)
 */

/* .CONSTANT:
 * TYPE [4]
 * DATA [string|uint|int|float|...]
 * START_LINE [8] (DEBUG)
 * END_LINE [8] (DEBUG)
 */

/* .CLOSURE:
 * SUB_FUNCTION [.FUNCTION]
 * todo
 */

/* .DEBUG_INFO:
 * todo
 */


/* .FUNCTION:
 * NAME [string]
 * START_LINE [8]
 * END_LINE [8]
 * PARAMETERS_LENGTH [8]
 * HAS_VAR_ARGS [8]
 * INSTRUCTIONS_LENGTH [8]
 * INSTRUCTIONS [.INSTRUCTION]
 * LOCAL_LENGTH [8]
 * LOCALS [.LOCAL]
 * CONSTANTS_LENGTH [8]
 * CONSTANTS [.CONSTANT]
 * CLOSURES_LENGTH [8]
 * CLOSURES [.CLOSURE]
 * DEBUG_INFO_LENGTH [8]
 * DEBUG_INFO [.DEBUG_INFO] (DEBUG)
 */


/* .DECLARE:
 * TYPE [4]
 * BODY [.CLASS|.STRUCT|.INTERFACE|.FUNCTION|.ENUM|.FIELD]
 */

/* .CLASS:
 * NAME [string]
 * SUPER_CLASS_LENGTH[8]
 * SUPER_CLASSES [.REFERENCE]
 * GENERIC_LENGTH [8]
 * DECLARES_LENGTH [8]
 * DECLARES [.CLASS_DECLARE] [.FIELD|.PROPERTY|.METHOD|.META]
 */


/* .STRUCT:
 * NAME [string]
 * SUPER_STRUCT_LENGTH [8]
 * SUPER_STRUCTS [.REFERENCE]
 * GENERIC_LENGTH [8]
 * DECLARES_LENGTH [8]
 * DECLARES [.STRUCT_DECLARE] [.FIELD|.METHOD|.META]
 */

/* .INTERFACE:
 * NAME [string]
 * SUPER_INTERFACE_LENGTH [8]
 * SUPER_INTERFACES [.REFERENCE]
 * GENERIC_LENGTH [8]
 * DECLARES_LENGTH [8]
 * DECLARES [.INTERFACE_DECLARE] [.FIELD|.PROPERTY|.METHOD|.META]
 */

/* .ENUM_FIELD:
 * NAME [string]
 * DATA [string|uint|int|float|...]
 */

/* .ENUM:
 * NAME [string]
 * FLAG_TYPE [4]
 * ENUM_LENGTH [8]
 * ENUMS [.ENUM_DECLARE] [.ENUM_FIELD]
 */

enum EZrIoModuleDeclareType {
    ZR_IO_MODULE_DECLARE_TYPE_CLASS,
    ZR_IO_MODULE_DECLARE_TYPE_STRUCT,
    ZR_IO_MODULE_DECLARE_TYPE_INTERFACE,
    ZR_IO_MODULE_DECLARE_TYPE_FUNCTION,
    ZR_IO_MODULE_DECLARE_TYPE_ENUM,
    ZR_IO_MODULE_DECLARE_TYPE_FIELD,

    ZR_IO_MODULE_DECLARE_TYPE_ENUM_MAX
};

typedef enum EZrIoModuleDeclareType EZrIoModuleDeclareType;

enum EZrIoMemberDeclareType {
    ZR_IO_MEMBER_DECLARE_TYPE_FIELD,
    ZR_IO_MEMBER_DECLARE_TYPE_PROPERTY,
    ZR_IO_MEMBER_DECLARE_TYPE_METHOD,
    ZR_IO_MEMBER_DECLARE_TYPE_META,
    ZR_IO_MEMBER_DECLARE_TYPE_ENUM,

    ZR_IO_MEMBER_DECLARE_TYPE_ENUM_MAX
};

typedef enum EZrIoMemberDeclareType EZrIoMemberDeclareType;

enum EZrIoMemberDeclareStatus {
    ZR_IO_MEMBER_DECLARE_STATUS_NONE = 0,
    ZR_IO_MEMBER_DECLARE_STATUS_DECLARED = 1,
    ZR_IO_MEMBER_DECLARE_STATUS_DEFINED = 2,
    ZR_IO_MEMBER_DECLARE_STATUS_STATIC = 4,

    ZR_IO_MEMBER_DECLARE_STATUS_ENUM_MAX
};

typedef enum EZrIoMemberDeclareStatus EZrIoMemberDeclareStatus;


#endif // ZR_IO_CONF_H
