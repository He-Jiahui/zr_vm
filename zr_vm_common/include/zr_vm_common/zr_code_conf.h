//
// Created by HeJiahui on 2025/6/19.
//

#ifndef ZR_CODE_CONF_H
#define ZR_CODE_CONF_H

#include "zr_vm_common/zr_type_conf.h"

enum EZrOperationCode {
    ZR_OPCODE_MOVE,
    ZR_OPCODE_LOAD_CONSTANT,
    // TODO:

    // MATH OPERATION
    ZR_OPCODE_ADD,
    ZR_OPCODE_SUB,
    ZR_OPCODE_MUL,
    ZR_OPCODE_DIV,
    ZR_OPCODE_MOD,
    ZR_OPCODE_SHIFT_LEFT,
    ZR_OPCODE_SHIFT_RIGHT,

    ZR_OPCODE_LOGICAL_NOT,
    ZR_OPCODE_LOGICAL_AND,
    ZR_OPCODE_LOGICAL_OR,
    ZR_OPCODE_LOGICAL_GREATER,
    ZR_OPCODE_LOGICAL_LESS,
    ZR_OPCODE_LOGICAL_EQUAL,
    ZR_OPCODE_LOGICAL_NOT_EQUAL,
    ZR_OPCODE_LOGICAL_GREATER_EQUAL,
    ZR_OPCODE_LOGICAL_LESS_EQUAL,


    ZR_OPCODE_BINARY_NOT,
    ZR_OPCODE_BINARY_AND,
    ZR_OPCODE_BINARY_OR,
    ZR_OPCODE_BINARY_XOR,


    ZR_OPCODE_ENUM_MAX
};

typedef enum EZrOperationCode EZrOperationCode;

typedef TUInt64 TZrInstruction;
#endif //ZR_CODE_CONF_H
